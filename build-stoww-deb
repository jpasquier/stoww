#!/bin/bash

# build-stoww-deb: script that builds a Debian package of the stoww tool

set -e  # Exit immediately on error

# Variables
GIT_REPO="jpasquier/stoww"
BUILD_DIR=$(mktemp -d "${TMPDIR:-/tmp}/build-stoww-package.XXXXXXXX")
OUTPUT_DIR=$(pwd)
USE_LOCAL=0  # Flag to indicate if local repo should be used

# Clean up temp directory on script exit
trap 'rm -rf "$BUILD_DIR"' EXIT

# Ensure necessary tools are installed
for cmd in git fakeroot dpkg-deb; do
    command -v $cmd >/dev/null 2>&1 || \
      { echo >&2 "$cmd is required but not installed. Aborting."; exit 1; }
done

# Parse command-line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --local)
            USE_LOCAL=1
            shift
            ;;
        -h|--help)
            echo "Usage: $0 [--local]"
            echo "  --local    Build package from the current local git repository"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use -h or --help for usage information."
            exit 1
            ;;
    esac
done

# If using local repository, copy current directory to build directory
if [[ $USE_LOCAL -eq 1 ]]; then
    echo "Building from local repository..."
    # Ensure the current directory is a git repository
    if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
        echo "Error: Current directory is not a git repository."
        exit 1
    fi
    # Copy the current directory to the build directory, excluding the .git folder
    rsync -a ./ "$BUILD_DIR/"
else
    echo "Cloning repository from GitHub..."
    # Clone the repo to the build directory
    git clone "https://github.com/$GIT_REPO" "$BUILD_DIR"
fi

# Generate version information
cd "$BUILD_DIR"
COMMIT_COUNT=$(git rev-list --count HEAD)
COMMIT_HASH=$(git rev-parse --short HEAD)
VERSION="$COMMIT_COUNT-$COMMIT_HASH"

# Check for uncommitted changes
if [[ -n $(git status --porcelain) ]]; then
    VERSION="${VERSION}-dirty"
fi

# Define destination directories
PKG_DIR="$BUILD_DIR/pkg"
DEB_DIR="$BUILD_DIR/deb"

# Create necessary directories in the package structure
mkdir -p "$PKG_DIR/usr/bin"
mkdir -p "$PKG_DIR/usr/share/zsh/vendor-completions"
mkdir -p "$PKG_DIR/DEBIAN"
mkdir -p "$DEB_DIR"

# Copy files to the target directories
cp "$BUILD_DIR/stoww" "$PKG_DIR/usr/bin/"
cp "$BUILD_DIR/zsh_completion" "$PKG_DIR/usr/share/zsh/vendor-completions/_stoww"

# Ensure that files have the correct permissions
chmod 755 "$PKG_DIR/usr/bin/stoww"
chmod 644 "$PKG_DIR/usr/share/zsh/vendor-completions/_stoww"

# Add the control file
cat >"$PKG_DIR/DEBIAN/control" <<EOL
Package: stoww
Version: $VERSION
Section: admin
Priority: optional
Architecture: all
Depends: stow
Suggests: zsh
Maintainer: Jérôme Pasquier
Description: A Wrapper for GNU Stow
Homepage: https://github.com/$GIT_REPO
Bugs: https://github.com/$GIT_REPO/issues
EOL

# Build the package using fakeroot
echo "Building the Debian package..."
fakeroot dpkg-deb --build "$PKG_DIR" "$DEB_DIR"

# Move the generated .deb package to the initial directory
mv "$DEB_DIR"/*.deb "$OUTPUT_DIR"/

echo "Package built successfully: $(ls "$OUTPUT_DIR"/*.deb)"
